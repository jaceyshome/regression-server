swagger: '2.0'
info:
  description: Regression test server API
  version: "1.5.0"
  title: Regression test server API
  # put the contact info for your development or API team
  contact:
    email: jake.wang@sydney.edu.au
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

# tags are used for organizing operations
tags:
- name: Viewer
  description: |
    Operations available to the public include the privilege to
    1. view histories


# route paths
paths:
  /history:
    get:
      tags:
      - Viewer
      summary: get the latest history
      description: |
        includes a list of visual test results, the cucumber.json path as
        the functional test result
      produces:
      - application/json
      parameters:
      - in: query
        name: id
        description: get a history by id
        type: string
        required: false
      - in: query
        name: skip
        description: number of histories to skip for pagination
        type: integer
        format: int32
        minimum: 0
        maximum: 10
        required: false
      - in: query
        name: limit
        description: maximum number of histories to return
        type: integer
        format: int32
        minimum: 0
        maximum: 10
        required: false
      responses:
        200:
          description: get the latest history with its list of records
          schema:
            type: array
            items:
              $ref: '#/definitions/History'
          examples:
            {
              "application/json": {
                $ref: '#/externalDocs/x-mocks/latestHistory'
              }
            }
        400:
          description: bad input parameter
    post:
      tags:
      - Viewer
      summary: adds a new history
      description: creates a new history at each of the regression test starting point
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - name: body
          in: body
          required: true
          description: new history
          schema:
            $ref: '#/definitions/History'
      responses:
        201:
          description: item created
          examples:
            {
              "application/json": {
                $ref: '#/externalDocs/x-mocks/history'
              }
            }
        400:
          description: invalid input, object invalid
        409:
          description: an existing item already exists
  /visual:
    post:
      tags:
      - Viewer
      summary: adds a visual test result or a reference to the required history
      description: use it to add a visual test result or a reference
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        description: |
          a test result with the 'visualTest' type to add or
          a reference with the 'visualReference' type to add
        schema:
          $ref: '#/definitions/VisualReference'
      responses:
        201:
          description: item created
          examples:
            application/json:
              $ref: '#/externalDocs/x-mocks/newVisualReference'
        400:
          description: invalid input, object invalid
        409:
          description: an existing item already exist
    put:
      tags:
      - Viewer
      summary: approve a failed visual test result
      description: an failed visual test result to update
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/Record'
      responses:
        200:
          description: Successful response.
          examples:
            application/json:
              $ref: '#/externalDocs/x-mocks/visualTestResultApproved'
        400:
          description: invalid input, object invalid
  /functional:
    post:
      tags:
      - Viewer
      summary: adds a functional test result
      description: |
        adds the cucumber test result json file as a record to the rescord schema
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Record'
      responses:
        201:
          description: item created
          examples:
            application/json:
              $ref: '#/externalDocs/x-mocks/functionalTestResult'
        400:
          description: invalid input, object invalid
        409:
          description: an existing item already exists
definitions:
  History:
    type: object
    required:
    - instance
    - server
    properties:
      _id:
        type: string
        format: uid
      weight:
        type: integer
        description: weight is for sorting and ordering
      instance:
        type: string
        enum: [linux-chrome, linux-firefox, mac-firefox, mac-chrome, win10-chrome, win10-firefox, win10-edge, win7-ie11]
      server:
        type: string
        enum: [local, dev, test, train, prod
      visualFailedTotal:
        type: integer
      createdAt:
        type: string
        format: data-time
  VisualReference:
    type: object
    required:
    - historyId
    - browser
    - url
    - visualScreenshot
    - visualScreenshotPath
    properties:
      _id:
        type: string
        format: uid
      resourceType:
        type: string
      instance:
        type: string
      server:
        type: string
      historyId:
        type: string
        format: uid
      browser:
        type: string
      url:
        type: string
      name:
        type: string
      visualScreenShot:
        type: string
      visualScreenShotPath:
        type: string
        description: visual screenshot
      isArchived:
        type: boolean
      createdAt:
        type: string
        format: date-time
  VisualTestResult:
    type: object
    required:
    - historyId
    - visualReferenceId
    - browser
    - url
    - visualScreenshot
    - visualScreenshotPath
    properties:
      _id:
        type: string
        format: uid
      resourceType:
        type: string
      instance:
        type: string
      server:
        type: string
      historyId:
        type: string
        format: uid
      visualReferenceId:
        type: string
        format: uid
      browser:
        type: string
      url:
        type: string
      name:
        type: string
      visualScreenShot:
        type: string
      visualScreenShotPath:
        type: string
        description: visual screenshot file path
      visualDiffer:
        type: string
      visualDifferPath:
        type: string
        description: visual differ file path
      pass:
        type: boolean
      isArchived:
        type: boolean
      createdAt:
        type: string
        format: date-time
  Record:
    type: object
    required:
    - historyId
    - resourceType
    properties:
      _id:
        type: string
        format: uid
      historyId:
        type: string
        format: uid
      instance:
        type: string
      server:
        type: string
      browser:
        type: string
      url:
        type: string
      name:
        type: string
      resourceType:
        type: string
        enum: [visualTest, visualReference, functionalTest]
      visualReferenceId:
        type: string
      filePath:
        type: string
        description: visual screenshot or visual differ file path
      visualScreenShot:
        type: string
      visualDiffer:
        type: string
      isArchived:
        type: boolean
      functionalResult:
        type: string
      pass:
        type: boolean
      createdAt:
        type: string
        format: date-time
      approvedAt:
        type: string
        format: date-time
      approvedBy:
        type: string
        format: uid
        description: user id
externalDocs:
  url: 'http://#'
  x-mocks:
    screenshotExample1: "train/linux-chrome/screenshots/the-accordion-component_w768.png"
    screenshotExample2: "train/linux-chrome/screenshots/the-accordion-component_w1024.png"
    history:
      _id:          "hkgKJ84rjgGVXSXS"
      instance:     "linux-chrome"
      server:       "train"
      createdAt:    "2018-03-15T09:12:33.001Z"
    newHistory:
      server:       "train"
      instance:     "linux-chrome"
    newVisualReference:
      historyId:    "hkgKJ84rjgGVXSXS"
      browser:      "Chrome 65.0.3325.181"
      url:          "https://cws-localdev.sydney.edu.au/styleguide/accordion.html"
      name:         "the accordion component"
      visualScreenshot:         "train/linux-chrome/screenshots/the-accordion-component_w768.png"
      visualScreenshotPath:     "output/visual/hkgKJ84rjgGVXSXS/train/linux-chrome/screenshots/the-accordion-component_w768.png"
    newPassVisualTest:
      historyId:            "jmVsOEZBWHaKPEOH"
      visualReferenceId:    "NZnTG4StwzPI2qoE"
      browser:              "Chrome 65.0.3325.181"
      url:                  "https://cws-localdev.sydney.edu.au/styleguide/accordion.html"
      name:                 "the accordion component"
      visualScreenshot:     "train/linux-chrome/screenshots/the-accordion-component_w768.png"
      visualScreenshotPath: "output/visual/jmVsOEZBWHaKPEOH/train/linux-chrome/screenshots/the-accordion-component_w768.png"
    newFailedVisualTest:
      historyId: "ZwVlRQ3qtnpUoxqt"
      browser: "Chrome 65.0.3325.181"
      url: "http://cws-localdev.sydney.edu.au//study.html"
      name: "mobile navigation dropdown menu"
      visualScreenshot: "train/linux-chrome/screenshots/the-accordion-component_w768.png"
      visualScreenshotPath: "output/visual/ZwVlRQ3qtnpUoxqt/train/linux-chrome/screenshots/the-accordion-component_w768.png"
      visualReferenceId: "LdSjF2OxobGu5UUN"
      visualDiffer:     "train/linux-chrome/screenshots/the-accordion-component_w768.png"
      visualDifferPath: "output/visual/ZwVlRQ3qtnpUoxqt/train/linux-chrome/screenshots/the-accordion-component_w768.png"
      isSameDimensions: true
      misMatchPercentage: 1.22
    visualTestReferenceArchived:
      _id:           "fVtm3FkvKwaYRSH1"
      historyId:    "jmVsOEZBWHaKPEOH"
      isArchived:   true
      resourceType: "visualReference"
      screenshot:   "train/linux-chrome/screenshots/corporate/site-title.png"
      createdAt:    "2018-03-15T09:12:33.001Z"
    visualTestReference:
      _id:           "NZnTG4StwzPI2qoE"
      historyId:    "iYEFCpQB3T20O9iE"
      instance:     "linux-chrome"
      server:       "dev"
      resourceType: "visualReference"
      screenshot:   "train/linux-chrome/screenshots/corporate/accordion.png"
      createdAt:    "2018-03-15T09:12:33.001Z"
    visualTestResult:
      _id:           "KcpAj5Y2O6N7F5ul"
      historyId:    "hkgKJ84rjgGVXSXS"
      resourceType: "visualTest"
      visualReferenceId:  "NZnTG4StwzPI2qoE"
      visualScreenshot:   "train/linux-chrome/screenshots/corporate/accordion.png"
      visualDiffer:       "train/linux-chrome/differs/corporate/accordion.png"
      pass:         false
      createdAt:    "2018-03-15T09:12:33.001Z"
    visualTestResultPass:
      _id:           "KcpAj5Y2O6N7F5ul"
      historyId:    "hkgKJ84rjgGVXSXS"
      resourceType: "visualTest"
      visualReferenceId:  "NZnTG4StwzPI2qoE"
      visualScreenshot:   "train/linux-chrome/screenshots/corporate/accordion.png"
      pass:         true
      createdAt:    "2018-03-15T09:12:33.001Z"
    visualTestResultApproved:
      _id:           "wYUcu6GcUXqHZm1M"
      historyId:    "hkgKJ84rjgGVXSXS"
      resourceType: "visualTest"
      visualReferenceId:  "NZnTG4StwzPI2qoE"
      visualScreenshot:   "train/linux-chrome/screenshots/corporate/accordion-component.png"
      visualDiffer:       "train/linux-chrome/differs/corporate/accordion-component.png"
      pass:       true
      createdAt:  "2018-03-15T09:12:33.001Z"
      approvedAt: "2018-03-25T09:12:33.001Z"
      approvedBy: "J84csdrjgGKdo2d"
    newFunctionalTest:
      functionalResult: "functional-test/train/linux-chrome/cucumber.json"
    functionalTestResult:
      _id:         "OzXiStRgcuoJsD3X"
      historyId:  "hkgKJ84rjgGVXSXS"
      resourceType: "functionalTest"
      functionalResult:       "functional-test/train/linux-chrome/cucumber.json"
      createdAt:  "2018-03-15T09:12:33.001Z"
    latestHistory:
      instance: "local"
      server: "localdev"
      weight: 20,
      createdAt: "2018-07-22T15:01:42+10:00"
      _id: "LvlmQZxu4ivLliFu"
      allPass: true
      functionalTest: {}
      visualTests:
        -
          historyId:    "LvlmQZxu4ivLliFu"
          browser:      "Chrome 65.0.3325.181"
          url:          "http://cws-localdev.sydney.edu.au/study.html"
          name:         "Page visual regression test on the published /study.html on the CWS for Corporate"
          visualScreenshot:     "train/linux-chrome/screenshots/the-accordion-component_w768.png"
          visualScreenshotPath: "output/visual/LvlmQZxu4ivLliFu/train/linux-chrome/screenshots/the-accordion-component_w768.png"
          visualReferenceId:    "H4dq0K3iYuTFl9F1"
          isSameDimensions: true,
          misMatchPercentage: 0,
          createdAt: "2018-07-22T15:01:58+10:00"
          resourceType: "visualTest"
          isArchived: false
          pass: true
          _id: "PjzGlvqTk57rXMLc"
      visualReferences:
        -
          historyId: "Zlf3MUCVeKKnuJfM"
          browser: "Chrome 65.0.3325.181"
          url: "http://cws-localdev.sydney.edu.au/study.html"
          name: "Page visual regression test on the published /study.html on the CWS for Corporate"
          visualScreenshot: "train/linux-chrome/screenshots/the-accordion-component_w768.png"
          visualScreenshotPath: "output/visual/LvlmQZxu4ivLliFu/train/linux-chrome/screenshots/the-accordion-component_w768.png"
          instance: "local"
          server: "localdev"
          createdAt: "2018-07-22T15:01:34+10:00"
          resourceType: "visualReference"
          isArchived: false
          _id: "H4dq0K3iYuTFl9F1"
host: "virtserver.swaggerhub.com"
basePath: "/usyd-wdd/regression-test-server/1.0.0"
# schemes:
#  - http
# Added by API Auto Mocking Plugin
# schemes:
#  - http
# Added by API Auto Mocking Plugin
schemes:
 - https
 - http
